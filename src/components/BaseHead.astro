---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/style.css';

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/logo.jpg' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<!-- <link rel="preload" href="/fonts/Akkurat-Regular.woff" as="font" type="font/woff" crossorigin /> -->

<link
  rel="preload"
  href="/fonts/OverusedGrotesk/OverusedGrotesk-Roman.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<link
  rel="preload"
  href="/fonts/OverusedGrotesk/OverusedGrotesk-Medium.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<!-- <link
  rel="preload"
  href="/fonts/OverusedGrotesk/OverusedGrotesk-SemiBold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/> -->

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script>
  import { gsap } from 'gsap';
  import ScrollToPlugin from 'gsap/ScrollToPlugin';
  import Scroll from '@/widgets/Scroll';
  import { state } from '@/stores/statusStore';
  import { debounce, browserDetect, setBrowserDetect } from '@/utils/utils';
  import websiteCarbonBadge from '@/widgets/WebsiteCarbonBadge';

  gsap.registerPlugin(ScrollToPlugin);

  let scroll: InstanceType<typeof Scroll> | null = null;
  let scrollers = document.querySelectorAll<HTMLElement>('[data-scroller');

  const showHeader = debounce(() => {
    const header = document.querySelector('.js-header');

    if (header) {
      state.headerStatus = 'visible';
      gsap.set(header, { autoAlpha: 1, y: 0 });
    }
  }, 200);

  async function handleScrollerClick(event: Event) {
    event.preventDefault();
    const element = event.currentTarget as HTMLElement;
    const targetString = element.dataset.scroller;

    if (targetString) {
      const target = document.querySelector(targetString);

      if (target) {
        const top = target.getBoundingClientRect().top + window.scrollY;
        await gsap.to(window, { scrollTo: top });
        showHeader();
      }
    }
  }

  function onPageLoad() {
    console.log('*** base loaded');
    const view = document.querySelector<HTMLElement>('.js-view');
    scrollers = document.querySelectorAll<HTMLElement>('[data-scroller');

    setBrowserDetect();

    if (scroll && view) {
      scroll.updateView(view);
      scroll.activate();
    }

    for (let index = 0; index < scrollers.length; index++) {
      const element = scrollers[index];
      element.addEventListener('click', handleScrollerClick);
    }

    websiteCarbonBadge();
  }

  function onAfterSwap() {
    console.log('*** base unmount');
    if (scrollers.length) {
      for (let index = 0; index < scrollers.length; index++) {
        const element = scrollers[index];
        element.removeEventListener('click', handleScrollerClick);
      }
    }

    if (scroll) {
      scroll.destroy();
    }
  }

  const initialView = document.querySelector<HTMLElement>('.js-view');

  if (initialView && !browserDetect().mobile) {
    scroll = new Scroll(initialView);
    // scroll.activate();
  }

  // setBrowserDetect();
  document.addEventListener('astro:page-load', onPageLoad);
  document.addEventListener('astro:after-swap', onAfterSwap);
</script>
