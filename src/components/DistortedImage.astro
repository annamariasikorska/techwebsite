---
interface Props {
  width: number;
  height: number;
  src: string;
}

// const { width, height, src } = Astro.props;
// const viewBox = `0 0 ${width} ${height}`;
const { src } = Astro.props;
---

<!-- <script>
  const image = document.querySelector<SVGImageElement>('.distort__image');

  if (image) {
    const imageWidth = window.innerWidth / 2;
    const imageHeight = window.innerHeight * 0.76;
    image.width = imageWidth;
    image.height = imageHeight;
  }
</script> -->
<svg class="distort" data-animation="distort" data-delay="0.4">
  <defs>
    <mask id="fadeMask">
      <rect x="0" y="0" width="100%" height="100%" fill="url(#fadeGradient)"></rect>
    </mask>
    <linearGradient
      id="fadeGradient"
      gradientUnits="userSpaceOnUse"
      x1="0%"
      y1="0%"
      x2="100%"
      y2="0%"
    >
      <stop offset="0%" stop-color="white" stop-opacity="0"></stop>
      <stop offset="30%" stop-color="white" stop-opacity="0.3"></stop>
      <stop offset="100%" stop-color="white" stop-opacity="1"></stop>
    </linearGradient>
  </defs>
  <filter id="distortionFilter">
    <feTurbulence
      type="fractalNoise"
      baseFrequency="0.01 0.003"
      numOctaves="5"
      seed="2"
      stitchTiles="noStitch"
      x="0%"
      y="0%"
      width="100%"
      height="100%"
      result="noise"></feTurbulence>
    <feDisplacementMap
      in="SourceGraphic"
      in2="noise"
      scale="10"
      xChannelSelector="R"
      yChannelSelector="B"
      x="0%"
      y="0%"
      width="100%"
      height="100%"
      filterUnits="userSpaceOnUse"></feDisplacementMap>

    <feComponentTransfer result="faded">
      <feFuncA type="linear" slope="1" intercept="0">
        <!-- Use slope and intercept to control fade from left to right -->
      </feFuncA>
    </feComponentTransfer>
    <feBlend in="faded" in2="SourceGraphic" mode="normal"></feBlend>
  </filter>
  <g filter="url(#distortionFilter)">
    <image
      class="distort__image"
      x="0"
      y="0"
      xlink:href={src}
      width="100%"
      height="100%"
      preserveAspectRatio="xMaxYMin slice"
    />
  </g>
</svg>

<style>
  .distort {
    width: 100%;
    height: 100%;

    /* position: absolute;
    pointer-events: none;
    will-change: transform; */

    &__image {
      width: 100%;
      height: auto;
      opacity: 0;
    }
  }
</style>
